TARGETS = breakpoints
TARGETS += cpu-hotplug
TARGETS += efivarfs
TARGETS += exec
TARGETS += firmware
TARGETS += ftrace
TARGETS += kcmp
TARGETS += memfd
TARGETS += memory-hotplug
TARGETS += mount
TARGETS += mqueue
TARGETS += net
TARGETS += powerpc
TARGETS += ptrace
TARGETS += size
TARGETS += sysctl
TARGETS += timers
TARGETS += user
TARGETS += vm
#Please keep the TARGETS list alphabetically sorted

TARGETS_HOTPLUG = cpu-hotplug
TARGETS_HOTPLUG += memory-hotplug

# Used in only run_tests target when make kselftest is run in
# top level source directory
ifeq "$(origin TARGETS)" "command line"
no_install_run=1
endif

ifdef INSTALL_KSFT_PATH
KSELFTEST=$(INSTALL_KSFT_PATH)/kselftest.sh
export KSELFTEST
# TODO add install target for SKIP_INSTALL_TARGETS
SKIP_INSTALL_TARGETS = exec powerpc
INSTALL_TARGETS = $(filter-out $(SKIP_INSTALL_TARGETS),$(TARGETS)) ipc
else
no_install_run=1
endif

INSTALL_KSFT_ERR = "Run make kselftest_install in top level source directory"

all:
	for TARGET in $(TARGETS); do \
		make -C $$TARGET; \
	done;

install:
ifdef INSTALL_KSFT_PATH
	rm -rf $(INSTALL_KSFT_PATH)
	mkdir -p $(INSTALL_KSFT_PATH)

	make all
	@echo "#!/bin/sh\n# Kselftest Run Tests ...." >> $(KSELFTEST)
	@echo "# This file is generated by kselftest_install" >> $(KSELFTEST)
	@echo "# Please don't change it !!\n"  >> $(KSELFTEST)
	@echo "echo \"============================\"" >> $(KSELFTEST)
	for TARGET in $(INSTALL_TARGETS); do \
		echo "Installing $$TARGET"; \
		echo "echo \"Start $$TARGET test ....\"" >> $(KSELFTEST); \
		make -C $$TARGET install; \
		echo "echo \"End $$TARGET test ....\"" >> $(KSELFTEST); \
		echo "echo \"============================\"" >> $(KSELFTEST); \
	done;
	chmod +x $(KSELFTEST)
else
	@echo $(INSTALL_KSFT_ERR)
endif

run_tests:
ifndef no_install_run
# ifdef INSTALL_KSFT_PATH
	make install
	@cd $(INSTALL_KSFT_PATH); ./kselftest.sh; cd -
# invoke run_tests for SKIP_INSTALL_TARGETS
	for TARGET in $(SKIP_INSTALL_TARGETS); do \
		make -C $$TARGET run_tests; \
	done;
# endif
else
	make all
	for TARGET in $(TARGETS); do \
		make -C $$TARGET run_tests; \
	done;
endif

hotplug:
	for TARGET in $(TARGETS_HOTPLUG); do \
		make -C $$TARGET; \
	done;

run_hotplug: hotplug
	for TARGET in $(TARGETS_HOTPLUG); do \
		make -C $$TARGET run_full_test; \
	done;

clean_hotplug:
	for TARGET in $(TARGETS_HOTPLUG); do \
		make -C $$TARGET clean; \
	done;

clean:
	for TARGET in $(TARGETS); do \
		make -C $$TARGET clean; \
	done;
